{
  "openapi": "3.0.3",
  "info": {
    "x-logo": {
      "url": "https://placehold.co/170x38/000000/FFFFFF/png"
    },
    "title": "Middleware API",
    "description": "## üß∞ Introduction \n Welcome to the API documentation for Bubbletea Middleware! This API is designed to help sellers integrate with our marketplace platform, making it easy to list and manage products, track order, and more.\r\nThis documentation will provide you with everything you need to know to start using our middleware project. You'll find detailed API reference documentation, as well as examples to help you get up to speed quickly.\n\n## ‚Ü©Ô∏è Webhooks\nBubletea provides Webhooks to notify real-time subscribed clients.\nBelow is the list of **events** that Bubletea Middleware API will trigger; the details will find below ahead:\n  - `order/created`: Occurs when a order is created. [more details](#tag/Events/paths/order~1created/post)\n  - `order/creation-failed`: Occurs when a order creation fails. [more details](#tag/Events/paths/order~1creation-failed/post)\n  - `order-line/cancelled`: Occurs when a order line is cancelled. [more details](#tag/Events/paths/order-line~1cancelled/post)\n  - `order-line/refunded`: Occurs when a order line is refunded. [more details](#tag/Events/paths/order-line~1refunded/post)\n  - `order-line/shipped`: Occurs when a order line is shipped. [more details](#tag/Events/paths/order-line~1shipped/post)",
    "termsOfService": "",
    "contact": {
      "name": "Support",
      "url": "https://help.bubbletea.com.au",
      "email": "support@bubbletea.com.au"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/api/order": {
      "post": {
        "tags": [
          "Order"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/order/{externalOrderId}": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "externalOrderId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateOrderRequest": {
        "required": [
          "customerEmail",
          "customerPhone",
          "externalOrderId",
          "orderGroups",
          "purchaseDate",
          "shippingInfo"
        ],
        "type": "object",
        "properties": {
          "externalOrderId": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "External Payment Receipt Id. This groups all orders made by a customer in a single purchase. This should be unique per marketplace"
          },
          "purchaseDate": {
            "type": "string",
            "description": "The date the order was purchased",
            "format": "date-time"
          },
          "customerEmail": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Customer's email. Used for support and tracking"
          },
          "customerPhone": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Customer's phone number. Used for support and tracking"
          },
          "shippingInfo": {
            "$ref": "#/components/schemas/ShippingInfo"
          },
          "orderGroups": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderGroup"
            }
          }
        },
        "additionalProperties": false
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetOrderResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "lastUpdated": {
            "type": "integer",
            "description": "The time this Order was last updated (<see href=\"https://en.wikipedia.org/wiki/Unix_time\">epoch time</see> in milliseconds).",
            "format": "int64"
          },
          "order": {
            "$ref": "#/components/schemas/OrderDetails"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDetails": {
        "type": "object",
        "properties": {
          "externalOrderId": {
            "type": "string",
            "nullable": true
          },
          "orderGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderGroupDetails"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderGroup": {
        "required": [
          "externalOrderGroupId",
          "orderLines"
        ],
        "type": "object",
        "properties": {
          "externalOrderGroupId": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "External order group id. This groups all orders for a seller that share a shipping cost strategy. This should be unique per ExternalOrderId"
          },
          "orderLines": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLine"
            }
          }
        },
        "additionalProperties": false
      },
      "OrderGroupDetails": {
        "type": "object",
        "properties": {
          "externalOrderGroupId": {
            "type": "string",
            "nullable": true
          },
          "orderLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineDetails"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderLine": {
        "required": [
          "dealId",
          "externalOrderLineId",
          "orderedQuantity",
          "productTitle",
          "totalShippingPrice",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "externalOrderLineId": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "External order item id. This is similar to a line item. This should be unique per ExternalOrderGroupId"
          },
          "productTitle": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "The title of the product at the time of purchase"
          },
          "dealId": {
            "type": "integer",
            "description": "The id of the product as it is in the my deal db",
            "format": "int64",
            "minimum": 0
          },
          "orderedQuantity": {
            "type": "integer",
            "description": "The quantity of the product ordered",
            "format": "int32",
            "minimum": 1
          },
          "unitPrice": {
            "type": "number",
            "description": "The price per unit charged to the customer",
            "format": "double",
            "minimum": 0.01
          },
          "unitPriceExcCommission": {
            "type": "number",
            "description": "The price per unit charged to the customer minus marketplace commission",
            "format": "double",
            "nullable": true,
            "minimum": 0.01
          },
          "totalShippingPrice": {
            "type": "number",
            "description": "The cost of shipping for all items charged to the customer",
            "format": "double",
            "minimum": 0
          },
          "totalShippingPriceExcCommission": {
            "type": "number",
            "description": "The cost of shipping for all items charged to the customer minus marketplace commission",
            "format": "double",
            "nullable": true,
            "minimum": 0
          }
        },
        "additionalProperties": false
      },
      "OrderLineDetails": {
        "type": "object",
        "properties": {
          "externalOrderLineId": {
            "type": "string",
            "nullable": true
          },
          "dealId": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "$ref": "#/components/schemas/OrderLineStatus"
          },
          "lastUpdated": {
            "type": "integer",
            "description": "The time this OrderLine was last updated (<see href=\"https://en.wikipedia.org/wiki/Unix_time\">epoch time</see> in milliseconds).",
            "format": "int64"
          },
          "orderedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "shippedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "shippedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "trackingNumbers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "carrier": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "refundReason": {
            "$ref": "#/components/schemas/RefundReason"
          }
        },
        "additionalProperties": false
      },
      "OrderLineStatus": {
        "enum": [
          "None",
          "ReadyToFulfill",
          "Shipped",
          "Refunded",
          "Cancelled"
        ],
        "type": "string"
      },
      "OrderStatus": {
        "enum": [
          "Accepted",
          "Created",
          "CreationFailed"
        ],
        "type": "string"
      },
      "RefundReason": {
        "enum": [
          "NONE",
          "CANCELLED_CHANGE_OF_MIND",
          "CANCELLED_DELIVERY_TIMEFRAME",
          "CANCELLED_ORDER_CHANGE",
          "CANCELLED_REFUSED_FRAUD_CHECK",
          "CANCELLED_SUPPLIER_SIDE",
          "COMPENSATION",
          "DAMAGED_ON_ARRIVAL",
          "DISCOUNT",
          "DISPATCH_ERROR",
          "DUPLICATE",
          "FAULTY",
          "FRAUD",
          "FREIGHT_DISCOUNT",
          "FREIGHT_ERROR",
          "LOST_IN_POST",
          "NOT_AS_DESCRIBED",
          "OUT_OF_STOCK",
          "OVERSEAS_ADDRESS",
          "PRICE_ERROR",
          "PRICE_MATCH",
          "REFUSED_FREIGHT",
          "RETURN_CHANGE_OF_MIND",
          "RETURN_TO_SENDER",
          "STAFF_PURCHASE",
          "TEST_PURCHASE",
          "VOUCHER_ISSUE",
          "EXCHANGE_OOS",
          "COUPON_DISCOUNT",
          "CANCELLED_VIA_API",
          "MY_MONEY_CREDIT",
          "PARTIAL_FRAUD_CHECK",
          "MISSING_PARTS",
          "DELIVERY_ADDRESS_NOT_CONFIRMED",
          "FRAUD_NO_RESPONSE",
          "FRAUD_INSUFFICIENT_RESPONSE",
          "FORTER_DECLINED",
          "CHARGEBACK_ADJUSTMENT",
          "REFUND_SUBMITTED_VIA_API"
        ],
        "type": "string"
      },
      "ShippingInfo": {
        "required": [
          "addressLine1",
          "addressLine2",
          "firstName",
          "lastName",
          "postcode",
          "state",
          "suburb"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Customer's first name"
          },
          "lastName": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Customer's last name"
          },
          "company": {
            "maxLength": 200,
            "type": "string",
            "description": "Customer's company name",
            "nullable": true
          },
          "addressLine1": {
            "maxLength": 300,
            "minLength": 1,
            "type": "string",
            "description": "Shipping address line 1"
          },
          "addressLine2": {
            "maxLength": 300,
            "minLength": 1,
            "type": "string",
            "description": "Shipping address line 2"
          },
          "postcode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Shipping address postcode"
          },
          "suburb": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Shipping address suburb"
          },
          "state": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Shipping address state"
          }
        },
        "additionalProperties": false
      },
      "Cancelled": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string",
            "format": "uuid"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "externalOrderId": {
            "type": "string",
            "nullable": true
          },
          "externalOrderGroupId": {
            "type": "string",
            "nullable": true
          },
          "externalOrderLineId": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "refundReason": {
            "$ref": "#/components/schemas/RefundReason1"
          }
        },
        "additionalProperties": false
      },
      "Created": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string",
            "format": "uuid"
          },
          "timestamp": {
            "type": "integer",
            "description": "Timestamp when the event happened",
            "format": "int64"
          },
          "externalOrderId": {
            "type": "string",
            "description": "The external Order Id",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the Order/Creates event"
      },
      "CreationFailed": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string",
            "format": "uuid"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "externalOrderId": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefundReason1": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38
        ],
        "type": "integer",
        "format": "int32"
      },
      "Refunded": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string",
            "format": "uuid"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "externalOrderId": {
            "type": "string",
            "nullable": true
          },
          "externalOrderGroupId": {
            "type": "string",
            "nullable": true
          },
          "externalOrderLineId": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "refundReason": {
            "$ref": "#/components/schemas/RefundReason1"
          }
        },
        "additionalProperties": false
      },
      "Shipped": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string",
            "format": "uuid"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "externalOrderId": {
            "type": "string",
            "nullable": true
          },
          "externalOrderGroupId": {
            "type": "string",
            "nullable": true
          },
          "externalOrderLineId": {
            "type": "string",
            "nullable": true
          },
          "shippedDate": {
            "type": "string",
            "format": "date-time"
          },
          "shippedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "trackingNumbers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "carrier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  },
  "x-webhooks": {
    "order/created": {
      "description": "Occurs when a order is created.",
      "post": {
        "tags": [
          "Events"
        ],
        "requestBody": {
          "description": "Occurs when a order is created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Created"
              }
            }
          }
        },
        "responses": {}
      }
    },
    "order/creation-failed": {
      "description": "Occurs when a order creation fails.",
      "post": {
        "tags": [
          "Events"
        ],
        "requestBody": {
          "description": "Occurs when a order creation fails.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreationFailed"
              }
            }
          }
        },
        "responses": {}
      }
    },
    "order-line/cancelled": {
      "description": "Occurs when a order line is cancelled.",
      "post": {
        "tags": [
          "Events"
        ],
        "requestBody": {
          "description": "Occurs when a order line is cancelled.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cancelled"
              }
            }
          }
        },
        "responses": {}
      }
    },
    "order-line/refunded": {
      "description": "Occurs when a order line is refunded.",
      "post": {
        "tags": [
          "Events"
        ],
        "requestBody": {
          "description": "Occurs when a order line is refunded.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Refunded"
              }
            }
          }
        },
        "responses": {}
      }
    },
    "order-line/shipped": {
      "description": "Occurs when a order line is shipped.",
      "post": {
        "tags": [
          "Events"
        ],
        "requestBody": {
          "description": "Occurs when a order line is shipped.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Shipped"
              }
            }
          }
        },
        "responses": {}
      }
    }
  }
}
